let myarr = [10,11,12,13,14]
let newarr = [1,2,3,4,5]

delete myarr[0];

console.log(myarr)  // elem is deleted but still the same length

************************************************************************************************************
let unsortedarr = [123,234,543,321,125,7,1,2,3,8,90]
unsortedarr.sort().       // sort alphabatically
console.log(unsortedarr)


then how to sort array :
const compare =(a,b)=> 
{
  return a-b
}

let unsortedarr = [123,234,543,321,125,7,1,2,3,8,90]
unsortedarr.sort(compare)
console.log(unsortedarr)

splice array 

let randomarr = [12,13,16,15,14]


randomarr.splice(2,1,1011,1012,1013)
console.log(randomarr)

[
    12,   13, 1011,
  1012, 1013,   15,
    14
]

slice array 
let randomarr = [12,13,16,15,14]
newarr = randomarr.slice(0,2)
console.log(newarr)

[ 12, 13 ]
************************************************************************************************************

pop, push, sort, reverse, splice (return deleted items and modify source array) ===> effect original array 



map method
let randomarr = [12,13,16,15,14]

randomarr.map((value, index, array) => {
  console.log(value*2)
})


filter method 

let newarr = randomarr.filter((elmn) =>{
  return elmn < 15
})
console.log(newarr)


reduce method 

let randomarr = [12,13,16,15,14]


let newarr = randomarr.reduce((a1,a2) => {
  return a1+a2
})

console.log(newarr)
************************************************************************************************************

window : Global Object
DOM : Document Object Model : Javascript obj representation of html page
BOM :  Browser Object Model : additional manipulations like prompt, alert and confirm(? true/false) and location.href



************************************************************************************************************

console.dir(document.getElementsByTagName('span')[0]) >> returns JS Object
console.log(document.getElementsByTagName('span')[0]) >> retrun content of firsrt span

tagName.  : checks for HTML Tag
nodeName. : checks for any node , text node, comment node

outerHTML : inner HTML + elements
first.hidden = false






